{"version":3,"file":"profileController.js","sourceRoot":"/","sources":["controllers/profileController.ts"],"names":[],"mappings":";;;AACA,uCAAuC;AACvC,mDAA8C;AAEvC,MAAM,KAAK,GAAG,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE;IACtC,IAAI,CAAC;QACH,sCAAsC;QACtC,MAAM,OAAO,GAAQ,MAAM,WAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACrD,IAAI,CAAC,OAAO,EAAE,CAAC;YACb,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,gBAAgB,EAAE,CAAC,CAAC;QAC3D,CAAC;aAAM,CAAC;YACN,GAAG,CAAC,IAAI,CAAC,EAAE,QAAQ,EAAE,OAAO,CAAC,QAAQ,EAAE,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,CAAC,CAAC;QACjE,CAAC;IACH,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,wBAAwB,EAAE,CAAC,CAAC;IAC5D,CAAC;AACH,CAAC,CAAC;AAZW,QAAA,KAAK,SAYhB","sourcesContent":["\n// Function for retrieving user details\nimport {User} from \"../database/schemas/User\";\n\nexport const index = async (req, res) => {\n  try {\n    // Fetch user profile using req.userId\n    const user_db: any = await User.findByPk(req.userId);\n    if (!user_db) {\n      return res.status(404).json({ error: \"User not found\" });\n    } else {\n      res.json({ username: user_db.username, email: user_db.email });\n    }\n  } catch (error) {\n    res.status(500).json({ error: \"Error fetching profile\" });\n  }\n};\n\n"]}